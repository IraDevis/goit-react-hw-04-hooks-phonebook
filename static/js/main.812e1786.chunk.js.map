{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css"],"names":["ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","this","className","styles","formLabel","formInput","type","pattern","title","required","onChange","Component","Filter","label","input","ContactList","contacts","onDelete","map","id","onClick","App","filter","addContact","data","contact","toLowerCase","find","alert","newContact","shortid","generate","handleFilter","getContactsList","includes","deleteContact","prevState","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.812e1786.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <>\n        <form onSubmit={this.handleSubmit}>\n          <label className={styles.formLabel}>\n            Name\n            <input\n              className={styles.formInput}\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              onChange={this.handleChange}\n              value={this.state.name}\n            />\n          </label>\n          <label className={styles.formLabel}>\n            Number\n            <input\n              className={styles.formInput}\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              onChange={this.handleChange}\n              value={this.state.number}\n            />\n          </label>\n          <button type=\"submit\">Add contact</button>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default ContactForm;\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./Filter.module.css\";\n\nclass Filter extends Component {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.string,\n  };\n\n  render() {\n    return (\n      <>\n        <label className={styles.label}>\n          Find by name\n          <input\n            className={styles.input}\n            type=\"text\"\n            value={this.props.value}\n            onChange={this.props.onChange}\n          ></input>\n        </label>\n      </>\n    );\n  }\n}\n\nexport default Filter;\n","const ContactList = ({ contacts, onDelete }) => {\n  return (\n    <>\n      <ul>\n        {contacts.map(({ id, name, number }) => (\n          <li key={id}>\n            <p>\n              {name}: {number}\n            </p>\n            <button type=\"button\" onClick={() => onDelete(id)}>\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default ContactList;\n","import { Component } from \"react\";\nimport shortid from \"shortid\";\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\n\nimport \"modern-normalize\";\nimport \"./styles.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = (data) => {\n    const { contacts } = this.state;\n    const allContacts = contacts.map((contact) => contact.name.toLowerCase());\n\n    if (allContacts.find((contact) => contact === data.name.toLowerCase())) {\n      return alert(\"This name has already used, enter another name, please!\");\n    }\n\n    this.setState(({ contacts }) => {\n      const newContact = {\n        id: shortid.generate(),\n        name: data.name,\n        number: data.number,\n      };\n      return { contacts: [...contacts, newContact] };\n    });\n  };\n\n  handleFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getContactsList = () => {\n    return this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(this.state.filter.toLowerCase())\n    );\n  };\n\n  deleteContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter onChange={this.handleFilter} value={this.state.filter} />\n        <ContactList\n          contacts={this.getContactsList()}\n          onDelete={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formLabel\":\"ContactForm_formLabel__37_HE\",\"formInput\":\"ContactForm_formInput__3i1_8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__COQzQ\",\"input\":\"Filter_input__1Jajl\"};"],"sourceRoot":""}